/** @param {NS} ns **/
export async function main(ns) {
    // Target script to be run on a server
	var script = ns.args[0];
	var host = ns.args[1];

	var target_script = "/scripts/target-machine.ns"
	var files = [target_script, script];

	// Move files to target machine\
	if (host != "home")	await ns.scp(files, host);

	var log_msg_attempt = "Attempting to start on ";
	var log_msg_failed = "Failed to start on ";
	var log_msg_complete = "Success to start on ";

	var hosts = []
	for (const host of ns.scan("home")) {
		for (const sub_host of ns.scan(host)) {
			for (const sub_sub_host of ns.scan(sub_host)) {
				hosts.push(sub_sub_host);
			}
			hosts.push(sub_host);
		}
		hosts.push(host);
	}
	var set_of_host = [...new Set(hosts)];

	for (const sub_host of set_of_host) {
		if (sub_host == "home" | sub_host.length < 2) continue;
		await ns.write("log.txt", log_msg_attempt + sub_host + "\n");
		
		ns.killall(sub_host);

		var req_ports = ns.getServerNumPortsRequired(sub_host);
		if (req_ports > 0) {
			if (ns.fileExists("BruteSSH.exe", "home")) {
				ns.brutessh(sub_host);
				await ns.sleep(100);
			}
			if (ns.fileExists("FTPCrack.exe", "home")) {
				ns.ftpcrack(sub_host);
				await ns.sleep(100);
			}
		}

		if (!ns.hasRootAccess(sub_host)) {
			try {
				ns.nuke(sub_host);
			}
			catch {
				if (req_ports > 2) continue;
			}
		}

		if (ns.getHackingLevel() > ns.getServerRequiredHackingLevel(sub_host)) {
			ns.exec(target_script, host, 1, sub_host, script);
			//ns.installBackdoor(sub_host);
			await ns.sleep(100);
			await ns.write("log.txt", log_msg_complete + sub_host + "\n");
		}
	}
}